train_flist: '/your_data_path/places365_standard/places2_all/train_list.txt'
val_flist: '/your_data_path/places365_standard/places2_all/test_sub_list.txt'
test_path: '/your_data_path/places365_standard/val_256img_for_eval'

# see https://drive.google.com/drive/folders/1eU6VaTWGdgCXXWueCXilt6oxHdONgUgf?usp=sharing for downloading masks
train_mask_flist: [ '/your_mask_path/irregular_mask/irregular_lama_mask_list.txt',
                    '/your_mask_path/coco_mask/coco_mask_list.txt' ]
test_mask_flist: '/your_mask_path/test_mask'

batch_size: 32                 # input batch size for training
num_workers: 16
sample_size: 12
fp16: false

# Dataset settings
data_class: 'base.dataset.DynamicDataset_gradient_line'
dataset:
  rect_mask_rate: 0.0
  train_line_path: "places2_train_wireframes"
  eval_line_path: "places2_val_wireframes"
  round: 64
  str_size: 256
  input_size: 256  # size for eval

# model settings
structure_upsample_class: 'networks.upsample.StructureUpsampling4'
edgeline_tsr_class: 'networks.tsr.EdgeLineGPT256RelBCE_edge_pred_infer'
grad_tsr_class: 'networks.tsr.GradientGPT256RelBCE'
PLTrainer: 'trainers.pl_trainers.FinetunePLTrainer'

g_class: 'networks.generators.FTRModel'
g_args:
  use_gradient: True
  use_GFBlock: False
  activation: 'swish'
  use_VAN_between_FFC: False
  van_kernel_size: 21
  van_dilation: 3
  prior_ch: 5
  rezero_for_mpe: True
  rel_pos_num: 128

d_class: 'networks.discriminators.NLayerDiscriminator'
d_args:
  input_nc: 3


# pretrained ckpt settings (used for finetuning only)
resume_structure_upsample: none
resume_edgeline_tsr: none
resume_grad_tsr: none
resume_ftr: none


# Trainer settings
trainer:
  fix_256: True
  Turning_Point: 10000
  total_step: 150000
  sample_period: 1000
  eval_period: 2000
  save_period: 1000
  logging_every: 50
  ema_beta: 0.995
  sample_with_center_mask: false
  # loss
  l1:
    use_l1: true
    weight_missing: 0
    weight_known: 10.0
  adversarial:
    weight: 10.0
    gp_coef: 0.001
    mask_as_fake_target: true
    allow_scale_mask: true
    extra_mask_weight_for_gen: 0.0
    use_unmasked_for_gen: true
    use_unmasked_for_discr: true
    mask_scale_mode: 'maxpool'
  perceptual:
    weight: 0
  resnet_pl:
    weight: 30.0
#    mkdir -p ade20k/ade20k-resnet50dilated-ppm_deepsup/
#    wget -P ade20k/ade20k-resnet50dilated-ppm_deepsup/ http://sceneparsing.csail.mit.edu/model/pytorch/ade20k-resnet50dilated-ppm_deepsup/encoder_epoch_20.pth
    weights_path: './'
  feature_matching:
    weight: 100.0

# opt settings
optimizer:
  warmup_steps: 0
  decay_steps: [50000, 100000]
  decay_rate: 0.5
  g_opt:
    lr: 3.0e-4
    beta1: 0
    beta2: 0.99
  d_opt:
    lr: 1.0e-4
    beta1: 0
    beta2: 0.99